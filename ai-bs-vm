#!/bin/bash
# This script helps to bootstrap a puppet-managed
# Foreman-enabled Openstack VM
# Authors:
#  Nacho Barrientos <nacho.barrientos@cern.ch>
# Notes:
#  - This script is meant to be wrapped by ai-bs-pet
#    and ai-bs-cattle in the near future.

# Exit codes:
#  0 success
#  1 user input failed
#  20 Host staging failed
#  30 VM creation failed
#  50 Other errors

# Notes:
# certmgr-stage will fail if you're not member of ai-admins egroup

function dieiffail {
  if [ $1 -ne 0 ]; then
    if [ ! -z $AIBS_VMUSERDATA_PATH -a -e $AIBS_VMUSERDATA_PATH ]; then
      rm -f $AIBS_VMUSERDATA_PATH
    fi
    echo "$2";
    exit $3;
  fi
}

function usage {
  echo "Usage: $0 <pet|cattle> vmname"
  echo "Only 'pet' VM type is supported at the moment"
  exit 1
}

if [ -z $AIBS_HOSTGROUP_NAME ]; then
  echo "Hostgroup ID must be specified via AIBS_HOSTGROUP_NAME environment variable."
  echo "More info: 'man $0'. Exiting..."
  exit 1
fi

echo $AIBS_HOSTGROUP_NAME | egrep -q "([A-Za-z0-9/]+/spare|spare)$"
dieiffail $? "Hostgroup's tip must be 'spare'. Exiting" 1;

if [ -z $AIBS_SSHKEY_NAME ]; then
  echo "SSH key name must be specified via AIBS_SSHKEY_NAME environment variable."
  echo "More info: 'man $0'. Exiting..."
  exit 1
fi

if [ -z $OS_USERNAME ]; then
  echo "No OpenStack credentials found. Please source openrc.sh."
  echo "More info: 'man $0'. Exiting..."
  exit 1
fi

# VM name (must to follow RFC 1123 rules)
# Not a FQDN because it won't match the VM hostname in
# the cattle usecase
AIBS_VMNAME=$(echo $2 | sed -e 's/\.cern\.ch$//g')
echo $AIBS_VMNAME | egrep -q "^[a-zA-Z0-9][a-zA-Z0-9\-]*$"
dieiffail $? "Invalid hostname. See RFC 1123"

# VM type
VMTYPE="vmtype_$1"
ALLOWED_VMTYPES="vmtype_pet"

echo $ALLOWED_VMTYPES | grep -q $VMTYPE
[[ $? == 0 ]] || usage

# Cmdline validation
[[ -z $AIBS_VMNAME ]] && usage

# Foreman Owner
# (default: "$USER")
AIBS_FOREMAN_OWNER=${AIBS_FOREMAN_OWNER:-"$USER"}

# Puppet environment
# (default: 6 -- "devel"
AIBS_ENVIRONMENT_NAME=${AIBS_ENVIRONMENT_NAME:-"production"}

# VM flavor
# (default: 'm1.tiny')
AIBS_VMFLAVOR_NAME=${AIBS_VMFLAVOR_NAME:-"m1.tiny"}

# VM Image
# (default: "[AI] SLC6 Server"
AIBS_VMIMAGE_NAME=${AIBS_VMIMAGE_NAME:-"SLC6 Server"}

# VM base userdata
AIBS_VMBASEUSERDATA_PATH=${AIBS_VMBASEUSERDATA_PATH:-"/usr/share/ai-tools/userdata/common"}

echo "Trying to bootstrap '$AIBS_VMNAME'..."
echo "VM flavor: $AIBS_VMFLAVOR_NAME"
echo "VM image: $AIBS_VMIMAGE_NAME"
echo "Foreman owner: $AIBS_FOREMAN_OWNER"
echo "Foreman environment: $AIBS_ENVIRONMENT_NAME"
echo "Foreman hostgroup: $AIBS_HOSTGROUP_NAME"

#
# User data generation
#

echo "Preparing dynamic user data..."
echo "Using $AIBS_VMBASEUSERDATA_PATH as template"
AIBS_VMUSERDATA_PATH=$(mktemp)
rm $AIBS_VMUSERDATA_PATH
cp $AIBS_VMBASEUSERDATA_PATH $AIBS_VMUSERDATA_PATH
sed -i -e "s,%FOREMAN_HOSTGROUP%,$AIBS_HOSTGROUP_NAME,g" $AIBS_VMUSERDATA_PATH
sed -i -e "s/%FOREMAN_ENVIRONMENT%/$AIBS_ENVIRONMENT_NAME/g" $AIBS_VMUSERDATA_PATH
sed -i -e "s/%FOREMAN_OWNER%/$AIBS_FOREMAN_OWNER/g" $AIBS_VMUSERDATA_PATH
echo "Done"

#
# Host staging if pet VM
#

if [ $VMTYPE == "vmtype_pet" ]; then
  echo "Staging host on certmgr..."
  certmgr-stage --host $AIBS_VMNAME.cern.ch
  dieiffail $? "Failed to stage host. Exiting" 20;
fi

#
# VM spawning
#

echo "Host staged. Spawning VM..."
#  --meta "landb_create_vm=true"
nova boot --flavor $AIBS_VMFLAVOR_NAME --image "$AIBS_VMIMAGE_NAME" \
  --key_name $AIBS_SSHKEY_NAME \
  $([[ ! -z $AIBS_VMAVAILZONE_NAME ]] &&
    echo "--availability_zone $AIBS_VMAVAILZONE_NAME") \
  --user_data $AIBS_VMUSERDATA_PATH $AIBS_VMNAME

rm -f $AIBS_VMUSERDATA_PATH

if [ $? -ne 0 ]; then
  if [ $VMTYPE == "vmtype_pet" ]; then
    echo "Failed to create VM. Unstaging host...";
    certmgr-stage --unstage --host $AIBS_VMNAME
    dieiffail $? "Unstage process failed." 50
    exit 30
  fi
fi

echo "VM booting. Nothing else to do."

exit 0
