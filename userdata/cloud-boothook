#!/bin/sh
# Nacho Barrientos <nacho.barrientos@cern.ch>

# FUNCTION execute_shell_block
# Executes function $$1, $$3 times at maximum
# with a wait time of $$2 seconds between tries
function execute_shell_block {
  waittime=$$2
  max_attempts=$$3
  attemptno=1
  $$1
  until [ $$? == 0 ] ; do
    if [ $$attemptno -eq $$max_attempts ] ; then
      echo "Max number of attempts exceeded" >> $$LOGFILE
      return 1
    fi
    echo "Execution failed (attempt #$$attemptno out of #$$max_attempts) (next in $$waittime secs)"
    sleep $$waittime
    attemptno=$$(($$attemptno + 1))
    $$1
  done
  return 0
}

function unrecoverable_error {
  echo "Step '$$1' failed. Puppet won't run. Use SSH key (if available) to login." >> $$LOGFILE
  exit 1
}

LOCKFILE=/var/lib/cloud/boothook_lock
LOGFILE=/var/log/boothook.log

[ -e "$$LOCKFILE" ] && echo "This script has already run" >> $$LOGFILE && exit 0
touch $$LOCKFILE

echo "Setting up Puppet for the initial run. Please wait..." >> $$LOGFILE
date >> $$LOGFILE

OS_MAJOR_VERSION=`lsb_release -r | awk '{split($$2,a,"."); print a[1]}'`

FINALHOSTNAME=`curl http://169.254.169.254/1.0/meta-data/hostname -s -o -`
echo "Setting hostname to $${FINALHOSTNAME}" >> $$LOGFILE
hostname $$FINALHOSTNAME

#
# Install bootstrapping-time dependencies
#
function set_repositories {
  echo "Setting AI repository..." >> $$LOGFILE
  curl http://linuxsoft.cern.ch/internal/repos/ai$$OS_MAJOR_VERSION.repo > \
    /etc/yum.repos.d/ai$$OS_MAJOR_VERSION.repo
  test -f /etc/yum.repos.d/ai$$OS_MAJOR_VERSION.repo
}
execute_shell_block set_repositories 60 5 || unrecoverable_error "ai-repository"

DEPS="cern-get-keytab certmgr-client CERN-CA-certs augeas"

[ "$$OS_MAJOR_VERSION" == "6" ] && DEPS="$$DEPS yum-plugin-priorities"
[ "$$OS_MAJOR_VERSION" == "5" ] && DEPS="$$DEPS yum-priorities"

function install_dependencies {
  echo "Trying to install dependencies..." >> $$LOGFILE
  yum install -y --enablerepo=ai$$OS_MAJOR_VERSION $$DEPS
  rpm -ql $$DEPS > /dev/null
}
execute_shell_block install_dependencies 60 5 || unrecoverable_error "dependencies"

function install_puppet {
  echo "Trying to install puppet from AI repositories..." >> $$LOGFILE
  yum remove -y puppet
  yum install -y --enablerepo=ai$$OS_MAJOR_VERSION puppet
  rpm -ql puppet > /dev/null
}
execute_shell_block install_puppet 60 5 || unrecoverable_error "puppet"

#
# Generate puppet.conf
#
echo "Generating initial puppet.conf..." >> $$LOGFILE
cat << EOF > /etc/puppet/puppet.conf
# puppet.conf
[main]
server = $PUPPETMASTER_HOSTNAME
ca_server = $CASERVER_HOSTNAME
pluginsync = true
vardir = /var/lib/puppet
logdir = /var/log/puppet
rundir = /var/run/puppet
ssldir = /var/lib/puppet/ssl

[agent]
report = true
ignoreschedules = true
certificate_revocation = false
dynamicfacts = memorysize,memoryfree,swapsize,swapfree,uptime_seconds,uptime_hours
configtimeout = 500
runinterval = 1800
environment = $FOREMAN_ENVIRONMENT
EOF

#
# Generate kerberos keytab.
#
echo "Generating initial krb5.conf..." >> $$LOGFILE
cat << EOF > /etc/krb5.conf
[libdefaults]
 default_realm = CERN.CH
 ticket_lifetime = 25h
 renew_lifetime = 120h
 forwardable = true
 proxiable = true
 default_tkt_enctypes = arcfour-hmac-md5 aes256-cts aes128-cts des3-cbc-sha1 des-cbc-md5 des-cbc-crc

[appdefaults]
  pam = {
         external = true
         krb4_convert = false
         krb4_convert_524 = false
         krb4_use_as_req = false
  }

[domain_realm]
  .cern.ch = CERN.CH

[realms]
  CERN.CH  = {
    default_domain = cern.ch
    kpasswd_server = afskrb5m.cern.ch
    admin_server = afskrb5m.cern.ch
    kdc = cerndc.cern.ch
    v4_name_convert = {
      host = {
        rcmd = host
      }
    }
  }
EOF

install -m 0771 -o puppet -d /var/lib/puppet/ssl
install -m 0755 -o puppet -d /var/lib/puppet/ssl/certs

CERN_CA_BUNDLE_PATH=/var/lib/puppet/ssl/certs/ca.pem
case $$OS_MAJOR_VERSION in
  "6" )
    cp -p /etc/pki/tls/certs/CERN-bundle.pem $$CERN_CA_BUNDLE_PATH
    ;;
  "5" )
    cat /etc/pki/tls/certs/CERN*.pem > $$CERN_CA_BUNDLE_PATH
    ;;
esac

function installack {
  echo "Calling certmgr-installack..." >> $$LOGFILE
  /usr/bin/certmgr-installack --url https://$CASERVER_HOSTNAME:$CASERVER_PORT/krb/certmgr/host/ >> $$LOGFILE
}
execute_shell_block installack 10 15 || unrecoverable_error "installack"

# Clean up /etc/yum.repos.d/, no longer necessary.
# Puppet will recreate all of them.
/bin/rm -rf /etc/yum.repos.d/*.repo

# Because of: 418aa59f5c348bc97cfc48011ecdda62c26b5e36
/bin/mkdir -p /etc/yum-puppet.repos.d
/usr/bin/augtool -s set /files/etc/yum.conf/main/reposdir /etc/yum-puppet.repos.d/

echo "Generating initial /etc/sysconfig/puppet" >> $$LOGFILE
cat << EOF > /etc/sysconfig/puppet
# The puppetmaster server
#PUPPET_SERVER=puppet

# If you wish to specify the port to connect to do so here
PUPPET_PORT=8150

# Where to log to. Specify syslog to send log messages to the system log.
#PUPPET_LOG=/var/log/puppet/puppet.log

# You may specify other parameters to the puppet client here
PUPPET_EXTRA_OPTS="--waitforcert=500 --ca_port=8140"
EOF

# Turn puppet on for next reboot.
/sbin/chkconfig puppet on

# And start it manually as the VM won't reboot
service puppet restart

# Restart syslog to make sure it logs with new hostname
service rsyslog restart

echo "Done. Puppet is ready to run for the first time." >> $$LOGFILE
date >> $$LOGFILE
