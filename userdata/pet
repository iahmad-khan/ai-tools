Content-Type: multipart/mixed; boundary="===============4259264238506844499=="
MIME-Version: 1.0

--===============4259264238506844499==
Content-Type: text/cloud-boothook; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="cbh"

#cloud-boothook
#!/bin/sh
# Nacho Barrientos <nacho.barrientos@cern.ch>
# Tomas Karasek <tomas.karasek@cern.ch>

# FUNCTION execute_shell_block
# Executes function $1, $3 times at maximum
# with a wait time of $2 seconds between tries
function execute_shell_block {
  waittime=$2
  max_attempts=$3
  attemptno=1
  $1
  until [ $? == 0 ] ; do
    if [ $attemptno -eq $max_attempts ] ; then
      echo "Max number of attempts exceeded"
      return 1
    fi
    echo "Execution failed (attempt #$attemptno out of #$max_attempts) (next in $waittime secs)"
    sleep $waittime
    attemptno=$(($attemptno + 1))
    $1
  done
  return 0
}

function unrecoverable_error {
  # Recover stdout
  exec 1>&3
  echo "Step '$1' failed. Puppet won't run. Use SSH key to login."
  exit 1
}

LOCKFILE=/var/lib/cloud/boothock_lock
LOGFILE=/var/log/boothook.log

[ -e "$LOCKFILE" ] && exit 0
touch $LOCKFILE

echo "Setting up keytab, certificates and Puppet. Please wait..."
echo "In case of problems a logfile is available in $LOGFILE"

exec 3>&1
exec 1> $LOGFILE
exec 2> $LOGFILE

# Fill puppet.conf
cat << EOF > /etc/puppet/puppet.conf
# puppet.conf
[main]
server = apachelb01.cern.ch
ca_server = baby01.cern.ch
pluginsync = true
vardir = /var/lib/puppet
logdir = /var/log/puppet
rundir = /var/run/puppet
ssldir = /var/lib/puppet/ssl
runinterval = 60

[agent]
report = true
ignoreschedules = true
environment = devel
server = apachelb01.cern.ch
certificate_revocation = false
# END of puppet configuration from foreman template puppet.conf

EOF

#
# Set the correct time
#
/usr/sbin/ntpdate -sub ip-time-1.cern.ch ip-time-2.cern.ch || :
/sbin/clock --systohc || :
/bin/date || :

# Sometimes linuxsoft06 spits 404 because it's regenerating
# the repositories. Working around it...
function install_dependencies {
  echo "Trying to install dependencies..."
  yum install -y m2crypto python-kerberos python-simplejson krb5-workstation
  rpm -ql m2crypto python-kerberos python-simplejson krb5-workstation > /dev/null
}
execute_shell_block install_dependencies 60 15 || unrecoverable_error "dependencies"

curl  http://straylen.web.cern.ch/straylen/krb5.conf > /etc/krb5.conf

# End of hostcert kickstart snippet.
ARC="http://linuxsoft.cern.ch/cern/slc6X/x86_64/yum/os/Packages/arc-44-40.slc6.cern.x86_64.rpm"
KT="http://linuxsoft.cern.ch/cern/slc6X/x86_64/yum/os/Packages/cern-config-keytab-1-50.cern.noarch.rpm"
CM="http://lxsoft06.cern.ch/mash/ai6/x86_64/os/Packages/certmgr-client-0.1.5-4.ai6.noarch.rpm"
CERN=http://linuxsoft.cern.ch/cern/slc6X/x86_64/yum/updates/CERN-CA-certs-20120322-7.slc6.noarch.rpm
PP="http://lxsoft06.cern.ch/mash/ai6/x86_64/os/Packages/puppet-2.7.18-1.0cern1.ai6.noarch.rpm"

rpm -Uvh --oldpackage $PP || :
# arc and cern-config-keytab depend on one another so 
# install in the same transaction.
rpm -q arc > /dev/null 2>&1 || rpm -Uvh  $ARC $KT || :
rpm -q certmgr-client > /dev/null 2>&1 || rpm -Uvh $CM  || :
rpm -q CERN-CA-certs >  /dev/null 2>&1 || rpm -Uvh $CERN || :

install -m 0771 -o puppet -d /var/lib/puppet/ssl
install -m 0755 -o puppet -d /var/lib/puppet/ssl/certs

cp -p /etc/pki/tls/certs/CERN-bundle.pem /var/lib/puppet/ssl/certs/ca.pem

# Set the hostname. Wait for the reverse to be set to make sure
# LANDB is in sync
IPADDR=`ip -o -4 addr ls dev eth0 | awk '{split($4,a,"/"); print a[1]}'`
FINALHOSTNAME=`curl http://169.254.169.254/1.0/meta-data/hostname -s -o - | cut -f 1 -d "."`
function check_reverse {
  echo "Waiting for the correct PTR. Current hostname: $HOSTNAME. Goal: $FINALHOSTNAME"
  eval $(/bin/ipcalc --silent --hostname ${IPADDR})
  echo $HOSTNAME | /bin/grep -q $FINALHOSTNAME
}
execute_shell_block check_reverse 120 15 || unrecoverable_error "reverse"

echo "DNS updated. Setting hostname to ${HOSTNAME}"
hostname $HOSTNAME

# Generate kerberos keytab.
function generate_keytab {
  echo "Calling cern-config-keytab..."
  cern-config-keytab -f
  test -f /etc/krb5.keytab
}
execute_shell_block generate_keytab 120 15 || unrecoverable_error "keytab"

# And generate a host certificate
function call_installack {
  echo "Calling certmgr-installack..."
  /usr/bin/certmgr-installack --debug --url https://baby01.cern.ch:8008/krb/certmgr/host/ || :
}
execute_shell_block call_installack 10 15 || unrecoverable_error "installack"

# Turn puppet on for next reboot.
/sbin/chkconfig puppet on

# And start it manually as the VM won't reboot
service puppet start

# Restart syslog to make sure it logs with new hostname
service rsyslog restart

date
echo "Done"

exec 1>&3
echo "Done. Puppet is ready to run for the first time."

--===============4259264238506844499==--
