#!/usr/bin/env python

from aitools.foreman import ForemanClient
from aitools.config import ForemanConfig
from aitools.common import configure_logging
from aitools.errors import AiToolsForemanError
from aitools.errors import AiToolsForemanNotFoundError
from aitools.common import append_domain
from aitools.common import shortify

import argparse
import logging
import sys

def add_main(pargs):
    ForemanConfig().read_config_and_override_with_pargs(pargs)
    configure_logging(pargs)

    f = ForemanClient(deref_alias=pargs.dereference_alias)
    try:
        f.add_ipmi_interface(pargs.fqdn, pargs.ipmi_FQDN, pargs.mac, pargs.user, pargs.pw, pargs.ipmi_ip)
    except AiToolsForemanError:
        logging.error("Failed when adding IPMI interface to %s" % (pargs.fqdn))
        sys.exit(1)
    logging.info("Successfully added IPMI interface to %s" % (pargs.fqdn))


def change_main(pargs):
    ForemanConfig().read_config_and_override_with_pargs(pargs)
    configure_logging(pargs)

    f = ForemanClient(deref_alias=pargs.dereference_alias)
    try:
        f.change_ipmi_credentials(pargs.fqdn, pargs.user, pargs.pw)
    except AiToolsForemanError:
        logging.error("Failed when changing IPMI credentials on %s" % (pargs.fqdn))
        sys.exit(1)
    logging.info("Successfully changed IPMI credentials %s" % (pargs.fqdn))


def rename_main(pargs):
    ForemanConfig().read_config_and_override_with_pargs(pargs)
    configure_logging(pargs)

    f = ForemanClient(deref_alias=pargs.dereference_alias)
    try:
       f.rename_ipmi_interface_name(pargs.fqdn, pargs.new_ipmi_fqdn)
    except AiToolsForemanError as e:
        m = repr(e)
        logging.error("Error: failed when renaming IPMI interface on %s \n%s" % (pargs.fqdn, m))
        sys.exit(1)
    logging.info("Successfully renamed IPMI interface name on %s" % (pargs.fqdn))


def getcred_main(pargs):
    ForemanConfig().read_config_and_override_with_pargs(pargs)
    configure_logging(pargs)

    f = ForemanClient(deref_alias=pargs.dereference_alias)
    try:
        (user, pw) = f.get_ipmi_credentials(pargs.fqdn)
        print "Username: %s" % user
        print "Password: %s" % pw
        print
        print "For example:"
        print
        print '  ipmitool chassis status -H %s -U "%s" -P "%s"' % ("%s-ipmi.cern.ch" % shortify(pargs.fqdn), user, pw)
    except AiToolsForemanError:
        logging.error("Could not fetch IPMI credentials for %s" % (pargs.fqdn))
        sys.exit(1)



def main():
    parser = argparse.ArgumentParser(description="Manipulate IPMI interface definition in Foreman")

    foreman_config = ForemanConfig()
    foreman_config.add_standard_args(parser)
    parser.add_argument('-d', '--dryrun', action="store_true", help="Don't do the requests that alter data")
    parser.add_argument('-v', '--verbose', action="store_true", help="Be chatty")
    subparsers = parser.add_subparsers()

    add_parser = subparsers.add_parser("add-ipmi", help="Add an IPMI interface definition to a node")
    add_parser.add_argument("fqdn", metavar="FQDN", help="The hostname of the real node (not the BMC)")
    add_parser.add_argument("ipmi_FQDN", metavar="ipmi_FQDN", help="The name of the IPMI interface")
    add_parser.add_argument("-i", "--ipmi-ip", metavar="ipmi_ip", default=None, help="Set the IP for the interface to avoid a DNS lookup")
    add_parser.add_argument("mac", metavar="MAC-address", help="MAC address of new interface")
    add_parser.add_argument("user", metavar="username", help="IPMI username")
    add_parser.add_argument("pw", metavar="password", help="IPMI password")
    add_parser.set_defaults(func=add_main)

    getcred_parser = subparsers.add_parser("get-creds", help="Retrieve the IPMI username and password")
    getcred_parser.add_argument("fqdn", metavar="FQDN", help="The hostname of the real node (not the BMC)")
    getcred_parser.set_defaults(func=getcred_main)

    rename_parser = subparsers.add_parser("rename-ipmi", help="Rename the IPMI interface name in Foreman.")
    rename_parser.add_argument("-n", "--new_ipmi_fqdn", metavar="new_BMC_FQDN", help="The new FQDN of the BMC.\
        If not mentioned, it will be generated automatically like host_DN-ipmi.cern.ch. ")
    rename_parser.add_argument("fqdn", metavar="host_FQDN", help="The FQDN of the node (not the BMC)")
    rename_parser.set_defaults(func=rename_main)

    change_parser = subparsers.add_parser("change-ipmi-creds", help="Change the IPMI credentials stored in Foreman for a node")
    change_parser.add_argument("fqdn", metavar="FQDN", help="The hostname of the real node (not the BMC)")
    change_parser.add_argument("--user", metavar="username", dest="user", help="New BMC username")
    change_parser.add_argument("--pw", metavar="password", dest="pw", help="New BMC password")
    change_parser.set_defaults(func=change_main)

    pargs = parser.parse_args()
    if hasattr(pargs, 'fqdn'):
        pargs.fqdn = append_domain(pargs.fqdn)

    pargs.func(pargs)


if __name__ == "__main__":
    main()
